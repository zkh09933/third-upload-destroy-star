{"version":3,"sources":["star.js"],"names":["cc","Class","extends","Component","properties","pickRadios","default","tooltip","starPrefab","Prefab","onCollisionEnter","other","self","console","log","node","name","group","groupIndex","onPicked","destroy","getPlayerDistance","playerPos","player","getPosition","dist","position","sub","mag","game","spawnNewStar","gainScore","update","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;;AAELC,aAASF,GAAGG,SAFP;;AAILC,gBAAY;AACRC,oBAAW;AACPC,qBAAS,EADF;AAEPC,qBAAQ;AAFD,SADH;AAKRC,oBAAYR,GAAGS;AALP,KAJP;;AAaLC,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,gBAAQC,GAAR,CAAY,eAAZ,EAA6BH,MAAMI,IAAN,CAAWC,IAAxC,EAA8CL,MAAMI,IAAN,CAAWE,KAAzD,EAAgEN,MAAMI,IAAN,CAAWG,UAA3E;AACA,YAAIP,MAAMI,IAAN,CAAWG,UAAX,KAA0B,CAA9B,EAAiC;AAAE;AAC/B,iBAAKC,QAAL;AACA,iBAAKJ,IAAL,CAAUK,OAAV;AACD;AAEF;AACJ,KArBI;;AAuBLC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,MAAL,CAAYC,WAAZ,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,QAAV,CAAmBC,GAAnB,CAAuBL,SAAvB,EAAkCM,GAAlC,EAAX;AACF;AACE,eAAOH,IAAP;AACH,KA9BI;;AAgCLN,cAAU,oBAAW;AACjB;AACA,aAAKU,IAAL,CAAUC,YAAV;AACA;AACA,aAAKD,IAAL,CAAUE,SAAV;AACA;AACA;AACH,KAvCI;;AAyCL;AACA;AACA;;AAEAC,YAAQ,kBAAW;AACf;AACA;AACA,YAAIC,eAAe,IAAI,KAAKJ,IAAL,CAAUK,KAAV,GAAgB,KAAKL,IAAL,CAAUM,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKrB,IAAL,CAAUsB,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;;AAnDI,CAAT","file":"star.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["\r\ncc.Class({\r\n    \r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        pickRadios:{\r\n            default: 60,\r\n            tooltip:'星星和主角之间距离小于此数值，则收集完成', \r\n        },\r\n        starPrefab: cc.Prefab,\r\n    },\r\n\r\n\r\n    onCollisionEnter: function (other, self) {\r\n        console.log(\"other.name = \", other.node.name, other.node.group, other.node.groupIndex);\r\n        if (other.node.groupIndex === 2) { // 与道具相撞\r\n            this.onPicked();\r\n            this.node.destroy();\r\n           // this.getScore();\r\n\r\n        }\r\n    },\r\n  \r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n      //  console.log(dist);\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        //调用Game脚本得分\r\n        this.game.gainScore();\r\n        // 然后销毁当前星星节点\r\n        //this.node.destroy();\r\n    },\r\n\r\n    // getScore : function(){\r\n    //     this.game.gainScore();\r\n    // }\r\n\r\n    update: function() {\r\n        // ...\r\n        // 根据 Game 脚本中的计时器更新星星的透明度\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    }\r\n\r\n   \r\n\r\n   \r\n    \r\n});\r\n"]}